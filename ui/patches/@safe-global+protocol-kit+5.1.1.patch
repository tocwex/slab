diff --git a/node_modules/@safe-global/protocol-kit/dist/src/Safe.js b/node_modules/@safe-global/protocol-kit/dist/src/Safe.js
index 82aead4..525ffea 100644
--- a/node_modules/@safe-global/protocol-kit/dist/src/Safe.js
+++ b/node_modules/@safe-global/protocol-kit/dist/src/Safe.js
@@ -999,7 +999,11 @@ class Safe {
             options
         });
         serviceTransactionResponse.confirmations?.map((confirmation) => {
-            const signature = new utils_2.EthSafeSignature(confirmation.owner, confirmation.signature);
+            const signature = new utils_2.EthSafeSignature(
+              confirmation.owner,
+              confirmation.signature,
+              confirmation?.signatureType === "CONTRACT_SIGNATURE",
+            );
             safeTransaction.addSignature(signature);
         });
         return safeTransaction;
diff --git a/node_modules/@safe-global/protocol-kit/dist/src/utils/signatures/SafeSignature.js b/node_modules/@safe-global/protocol-kit/dist/src/utils/signatures/SafeSignature.js
index 3c165c3..a1bf039 100644
--- a/node_modules/@safe-global/protocol-kit/dist/src/utils/signatures/SafeSignature.js
+++ b/node_modules/@safe-global/protocol-kit/dist/src/utils/signatures/SafeSignature.js
@@ -32,8 +32,8 @@ class EthSafeSignature {
      */
     dynamicPart() {
         if (this.isContractSignature) {
-            const dynamicPartLength = (this.data.slice(2).length / 2).toString(16).padStart(64, '0');
-            return `${dynamicPartLength}${this.data.slice(2)}`;
+            // NOTE: Assuming single EIP-191 signaures from constructor
+            return `${this.data.slice(-1 * (130 + 64))}`
         }
         return '';
     }
