#!/bin/bash

# TODO:
# - Add code to change the name of a glob to the version name when we have a
#   method for recovering the Urbit hash for an arbitrary glob file in Unix.

## Constants ##

RELEASE_HELP="usage: release [-h | --help] [-l | --local] <version> <globpath>
perform a versioned release using a particular glob

Flag arguments:
  -h, --help: show this help message
  -l, --local: perform a local release"
RELEASE_VERSION_REGEX="([[:digit:]]+)\.([[:digit:]]+)\.([[:digit:]]+)"

## Helper Functions ##

## Arguments ##

while : ; do case ${1} in
	-h | --help) printf "%s\\n" "$RELEASE_HELP" && exit 1 ;;
	-l | --local) release_islocal="true" && shift 1 ;;
	-*) printf "invalid option: %s\\n" "${1}" && exit 1 ;;
	*) break ;;
esac done

if [ "2" != "$#" ]; then
	printf "%s\\n" "$RELEASE_HELP" && exit 1
fi

release_version="${1}"
if ! echo "${release_version}" | grep -qE "${RELEASE_VERSION_REGEX}"; then
	printf "invalid version string: %s\\n" "${release_version}" && exit 1
fi
release__hoonver="${release_version//./ }"

release_globpath="${2}"
if [ ! -f "${release_globpath}" ]; then
	printf "bad glob file at path: %s\\n" "${release_globpath}" && exit 1
fi
release__globname="$(basename "$(readlink -f "${release_globpath}")")"
release__globhash="$(echo "${release__globname}" | sed -re "s/^glob-(.*)\.glob$/\1/")"
if [ -z "${release__globhash}" ]; then
	printf "glob file has no hash: %s\\n" "${release_globpath}" && exit 1
fi

## Processing ##

release__basedir="$(dirname "$(dirname "$(dirname "$(readlink -f "$0")")")")"
release__docket="${release__basedir}/desk/bare/desk.docket-0"
release__reponame="$(git -C "${release__basedir}" remote -v | awk '/\(fetch\)$/ {print $2;}' | sed -re 's|.*:(.*)\.git$|\1|')"
if [ "${release_islocal}" = "true" ]; then
	# release__repourl="http://127.0.0.1:8000/v${release_version}.glob"
	release__repourl="http://127.0.0.1:8000/${release__globname}"
else
	# release__repourl="https://raw.githubusercontent.com/${release__reponame}/v${release_version}/meta/glob/v${release_version}.glob"
	release__repourl="https://raw.githubusercontent.com/${release__reponame}/v${release_version}/meta/glob/${release__globname}"
fi

# TODO: Verify that these commands succeeded and error out with a helpful
# message if they did not.
sed -r "s|([[:space:]]+glob-http\+\[).*(\].*)|\1\'${release__repourl}\' ${release__globhash}\2|" -i "${release__docket}"
sed -r "s|([[:space:]]+version\+\[).*(\].*)|\1${release__hoonver}\2|" -i "${release__docket}"

echo "deployed! run these follow commands to test:"
if [ "${release_islocal}" = "true" ]; then
	echo "cd ${release__basedir}/meta/glob && python3 -m http.server 8000"
else
	echo "git -C ${release__basedir} add ."
	echo "git -C ${release__basedir} commit -m \"update to version v${release_version}\""
	echo "git -C ${release__basedir} tag v${release_version}"
	echo "git -C ${release__basedir} push --tags origin HEAD"
fi
echo "durploy desk (test-ship) (test-desk) ${release__basedir}/desk/full/"
